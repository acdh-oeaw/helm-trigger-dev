{{/*
This is a stateless worker deployment that processes background jobs.
It relies on the same external services as the main application:
- Database: External PostgreSQL for job data
- Redis: External Redis for job queue
- No local storage required
*/}}
{{- if .Values.worker.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "trigger-dev.worker.name" . }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels: {{- include "trigger-dev.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
spec:
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels: {{- include "trigger-dev.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      {{- with .Values.worker.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "trigger-dev.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: worker
        {{- with .Values.worker.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "trigger-dev.serviceAccountName" . }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.worker.initContainers }}
      initContainers: {{- toYaml .Values.worker.initContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-worker
        securityContext: {{- toYaml .Values.securityContext | nindent 10 }}
        image: {{ include "trigger-dev.worker.image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ include "trigger-dev.worker.name" . }}-config
        env:
        - name: TRIGGER_API_URL
          value: "http://{{ include "trigger-dev.app.name" . }}:{{ .Values.service.port }}"
        {{- include "trigger-dev.commonEnv" . | nindent 8 }}
        {{- with .Values.worker.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.worker.startupProbe }}
        startupProbe: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.worker.livenessProbe }}
        livenessProbe: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.worker.readinessProbe }}
        readinessProbe: {{- toYaml . | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.resources.worker | nindent 10 }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 